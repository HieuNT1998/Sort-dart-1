name: CI

on:
  push:
    branches:
      - '**'
  pull_request:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest] # macos-latest, ubuntu-latest, 
    if: "!contains(github.event.head_commit.message, 'ci skip')"

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install node
        uses: actions/setup-node@v1
        with:
          node-version: "14"

      - name: Install OpenCV for Linux
        if: ${{ matrix.os == 'ubuntu-latest' }}
        uses: Dovyski/setup-opencv-action@v1
        with:
          opencv-version: '3.4.2'
          opencv-extra-modules: false

      - name: Install Eigen for Linux
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: sudo apt-get update && sudo apt-get install -y libeigen3-dev

      - name: Install OpenCV and Eigen for Mac
        if: ${{ matrix.os == 'macos-latest'}}
        run: brew install opencv3 eigen

      - name: Cache OpenCV for Windows
        if: ${{ matrix.os == 'windows-latest' }}
        uses: actions/cache@v2
        id: cache-opencv-windows
        with:
          path: .github\workflows\scripts\opencv-3.4.14
          key: ${{ runner.os }}-${{ hashFiles('.github/workflows/scripts/installOpenCV.bat') }}

      - name: Install OpenCV for Windows
        if: matrix.os == 'windows-latest' && steps.cache-opencv-windows.outputs.cache-hit != 'true'
        run: |
          cd .github/workflows/scripts
          ./installOpenCV.bat
      
      - name: Set OpenCV_DIR
        if: ${{ matrix.os == 'windows-latest' }}
        run: |
          setx OpenCV_DIR D:\a\sort-node\sort-node\.github\workflows\scripts\opencv-3.4.14\opencv\build\
          echo "OpenCV_DIR=D:\a\sort-node\sort-node\.github\workflows\scripts\opencv-3.4.14\opencv\build\" >> $GITHUB_ENV
          cd D:\a\sort-node\sort-node\.github\workflows\scripts\opencv-3.4.14\opencv\build
          ls

      - name: Install Eigen for Windows
        if: ${{ matrix.os == 'windows-latest' }}
        run: |
          curl https://gitlab.com/libeigen/eigen/-/archive/3.3.9/eigen-3.3.9.zip -o eigen-3.3.9.zip -s
          mkdir "C:\eigen"
          unzip eigen-3.3.9.zip -d "C:\eigen"
          mv C:\eigen\eigen-3.3.9 C:\eigen\Eigen3
          setx EIGEN3_INCLUDE_DIR C:\eigen

      - name: Install packages
        run: yarn upgrade --dev

      - name: Prebuild for Unix
        if: ${{ matrix.os != 'windows-latest' }}
        run: yarn build-prebuild

      - name: Prebuild for Windows
        if: ${{ matrix.os == 'windows-latest' }}
        env:
          OpenCV_DIR: D:/a/sort-node/sort-node/.github/workflows/scripts/opencv-3.4.14/opencv/build/install
          EIGEN3_INCLUDE_DIR: C:/eigen
        run: yarn build-prebuild

      - name: Build
        run: yarn install

      - name: Run test suite
        run: yarn test

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: artifact-${{ matrix.os }}
          path: prebuilds/**/*.tar.gz